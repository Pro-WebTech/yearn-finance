export const ironBankRegistryAdapterABI = [
  {
    inputs: [
      { internalType: 'address', name: '_oracleAddress', type: 'address' },
      { internalType: 'address', name: '_helperAddress', type: 'address' },
      { internalType: 'address', name: '_addressesGeneratorAddress', type: 'address' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { stateMutability: 'nonpayable', type: 'fallback' },
  {
    inputs: [],
    name: 'adapterInfo',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'id', type: 'address' },
          { internalType: 'string', name: 'typeId', type: 'string' },
          { internalType: 'string', name: 'categoryId', type: 'string' },
        ],
        internalType: 'struct RegistryAdapterIronBank.AdapterInfo',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'accountAddress', type: 'address' }],
    name: 'adapterPositionOf',
    outputs: [
      {
        components: [
          { internalType: 'uint256', name: 'supplyBalanceUsdc', type: 'uint256' },
          { internalType: 'uint256', name: 'borrowBalanceUsdc', type: 'uint256' },
          { internalType: 'uint256', name: 'borrowLimitUsdc', type: 'uint256' },
          { internalType: 'uint256', name: 'utilizationRatioBips', type: 'uint256' },
        ],
        internalType: 'struct RegistryAdapterIronBank.AdapterPosition',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'addressesGeneratorAddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'accountAddress', type: 'address' },
      { internalType: 'address', name: 'assetAddress', type: 'address' },
    ],
    name: 'assetAllowances',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'owner', type: 'address' },
          { internalType: 'address', name: 'spender', type: 'address' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
        ],
        internalType: 'struct RegistryAdapterIronBank.Allowance[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'assetAddress', type: 'address' }],
    name: 'assetBalance',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'assetAddress', type: 'address' }],
    name: 'assetDynamic',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'id', type: 'address' },
          { internalType: 'string', name: 'typeId', type: 'string' },
          { internalType: 'address', name: 'tokenId', type: 'address' },
          {
            components: [
              { internalType: 'uint256', name: 'amount', type: 'uint256' },
              { internalType: 'uint256', name: 'amountUsdc', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.TokenAmount',
            name: 'underlyingTokenBalance',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'uint256', name: 'totalSuppliedUsdc', type: 'uint256' },
              { internalType: 'uint256', name: 'totalBorrowedUsdc', type: 'uint256' },
              { internalType: 'uint256', name: 'lendApyBips', type: 'uint256' },
              { internalType: 'uint256', name: 'borrowApyBips', type: 'uint256' },
              { internalType: 'uint256', name: 'liquidity', type: 'uint256' },
              { internalType: 'uint256', name: 'liquidityUsdc', type: 'uint256' },
              { internalType: 'uint256', name: 'collateralFactor', type: 'uint256' },
              { internalType: 'bool', name: 'isActive', type: 'bool' },
              { internalType: 'uint256', name: 'reserveFactor', type: 'uint256' },
              { internalType: 'uint256', name: 'exchangeRate', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.AssetMetadata',
            name: 'metadata',
            type: 'tuple',
          },
        ],
        internalType: 'struct RegistryAdapterIronBank.AssetDynamic',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'accountAddress', type: 'address' },
      { internalType: 'address', name: 'assetAddress', type: 'address' },
    ],
    name: 'assetPositionsOf',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'assetId', type: 'address' },
          { internalType: 'address', name: 'tokenId', type: 'address' },
          { internalType: 'string', name: 'typeId', type: 'string' },
          { internalType: 'uint256', name: 'balance', type: 'uint256' },
          {
            components: [
              { internalType: 'uint256', name: 'amount', type: 'uint256' },
              { internalType: 'uint256', name: 'amountUsdc', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.TokenAmount',
            name: 'underlyingTokenBalance',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'address', name: 'owner', type: 'address' },
              { internalType: 'address', name: 'spender', type: 'address' },
              { internalType: 'uint256', name: 'amount', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.Allowance[]',
            name: 'tokenAllowances',
            type: 'tuple[]',
          },
          {
            components: [
              { internalType: 'address', name: 'owner', type: 'address' },
              { internalType: 'address', name: 'spender', type: 'address' },
              { internalType: 'uint256', name: 'amount', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.Allowance[]',
            name: 'assetAllowances',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct RegistryAdapterIronBank.Position[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'assetAddress', type: 'address' }],
    name: 'assetStatic',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'id', type: 'address' },
          { internalType: 'string', name: 'typeId', type: 'string' },
          { internalType: 'address', name: 'tokenId', type: 'address' },
          { internalType: 'string', name: 'name', type: 'string' },
          { internalType: 'string', name: 'version', type: 'string' },
          { internalType: 'string', name: 'symbol', type: 'string' },
          { internalType: 'uint8', name: 'decimals', type: 'uint8' },
        ],
        internalType: 'struct RegistryAdapterIronBank.AssetStatic',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'assetAddress', type: 'address' }],
    name: 'assetUnderlyingTokenAddress',
    outputs: [{ internalType: 'address', name: '', type: 'address' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'assetAddress', type: 'address' }],
    name: 'assetUnderlyingTokenPriceUsdc',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'accountAddress', type: 'address' },
      { internalType: 'address', name: 'assetAddress', type: 'address' },
    ],
    name: 'assetUserMetadata',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'assetId', type: 'address' },
          { internalType: 'bool', name: 'enteredMarket', type: 'bool' },
          { internalType: 'uint256', name: 'supplyBalanceUsdc', type: 'uint256' },
          { internalType: 'uint256', name: 'borrowBalanceUsdc', type: 'uint256' },
          { internalType: 'uint256', name: 'borrowLimitUsdc', type: 'uint256' },
        ],
        internalType: 'struct RegistryAdapterIronBank.AssetUserMetadata',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'assetsAddresses', outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }], stateMutability: 'view', type: 'function' },
  {
    inputs: [],
    name: 'assetsDynamic',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'id', type: 'address' },
          { internalType: 'string', name: 'typeId', type: 'string' },
          { internalType: 'address', name: 'tokenId', type: 'address' },
          {
            components: [
              { internalType: 'uint256', name: 'amount', type: 'uint256' },
              { internalType: 'uint256', name: 'amountUsdc', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.TokenAmount',
            name: 'underlyingTokenBalance',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'uint256', name: 'totalSuppliedUsdc', type: 'uint256' },
              { internalType: 'uint256', name: 'totalBorrowedUsdc', type: 'uint256' },
              { internalType: 'uint256', name: 'lendApyBips', type: 'uint256' },
              { internalType: 'uint256', name: 'borrowApyBips', type: 'uint256' },
              { internalType: 'uint256', name: 'liquidity', type: 'uint256' },
              { internalType: 'uint256', name: 'liquidityUsdc', type: 'uint256' },
              { internalType: 'uint256', name: 'collateralFactor', type: 'uint256' },
              { internalType: 'bool', name: 'isActive', type: 'bool' },
              { internalType: 'uint256', name: 'reserveFactor', type: 'uint256' },
              { internalType: 'uint256', name: 'exchangeRate', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.AssetMetadata',
            name: 'metadata',
            type: 'tuple',
          },
        ],
        internalType: 'struct RegistryAdapterIronBank.AssetDynamic[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address[]', name: '_assetsAddresses', type: 'address[]' }],
    name: 'assetsDynamic',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'id', type: 'address' },
          { internalType: 'string', name: 'typeId', type: 'string' },
          { internalType: 'address', name: 'tokenId', type: 'address' },
          {
            components: [
              { internalType: 'uint256', name: 'amount', type: 'uint256' },
              { internalType: 'uint256', name: 'amountUsdc', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.TokenAmount',
            name: 'underlyingTokenBalance',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'uint256', name: 'totalSuppliedUsdc', type: 'uint256' },
              { internalType: 'uint256', name: 'totalBorrowedUsdc', type: 'uint256' },
              { internalType: 'uint256', name: 'lendApyBips', type: 'uint256' },
              { internalType: 'uint256', name: 'borrowApyBips', type: 'uint256' },
              { internalType: 'uint256', name: 'liquidity', type: 'uint256' },
              { internalType: 'uint256', name: 'liquidityUsdc', type: 'uint256' },
              { internalType: 'uint256', name: 'collateralFactor', type: 'uint256' },
              { internalType: 'bool', name: 'isActive', type: 'bool' },
              { internalType: 'uint256', name: 'reserveFactor', type: 'uint256' },
              { internalType: 'uint256', name: 'exchangeRate', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.AssetMetadata',
            name: 'metadata',
            type: 'tuple',
          },
        ],
        internalType: 'struct RegistryAdapterIronBank.AssetDynamic[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'assetsLength', outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }], stateMutability: 'view', type: 'function' },
  {
    inputs: [
      { internalType: 'address', name: 'accountAddress', type: 'address' },
      { internalType: 'address[]', name: '_assetsAddresses', type: 'address[]' },
    ],
    name: 'assetsPositionsOf',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'assetId', type: 'address' },
          { internalType: 'address', name: 'tokenId', type: 'address' },
          { internalType: 'string', name: 'typeId', type: 'string' },
          { internalType: 'uint256', name: 'balance', type: 'uint256' },
          {
            components: [
              { internalType: 'uint256', name: 'amount', type: 'uint256' },
              { internalType: 'uint256', name: 'amountUsdc', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.TokenAmount',
            name: 'underlyingTokenBalance',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'address', name: 'owner', type: 'address' },
              { internalType: 'address', name: 'spender', type: 'address' },
              { internalType: 'uint256', name: 'amount', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.Allowance[]',
            name: 'tokenAllowances',
            type: 'tuple[]',
          },
          {
            components: [
              { internalType: 'address', name: 'owner', type: 'address' },
              { internalType: 'address', name: 'spender', type: 'address' },
              { internalType: 'uint256', name: 'amount', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.Allowance[]',
            name: 'assetAllowances',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct RegistryAdapterIronBank.Position[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'accountAddress', type: 'address' }],
    name: 'assetsPositionsOf',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'assetId', type: 'address' },
          { internalType: 'address', name: 'tokenId', type: 'address' },
          { internalType: 'string', name: 'typeId', type: 'string' },
          { internalType: 'uint256', name: 'balance', type: 'uint256' },
          {
            components: [
              { internalType: 'uint256', name: 'amount', type: 'uint256' },
              { internalType: 'uint256', name: 'amountUsdc', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.TokenAmount',
            name: 'underlyingTokenBalance',
            type: 'tuple',
          },
          {
            components: [
              { internalType: 'address', name: 'owner', type: 'address' },
              { internalType: 'address', name: 'spender', type: 'address' },
              { internalType: 'uint256', name: 'amount', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.Allowance[]',
            name: 'tokenAllowances',
            type: 'tuple[]',
          },
          {
            components: [
              { internalType: 'address', name: 'owner', type: 'address' },
              { internalType: 'address', name: 'spender', type: 'address' },
              { internalType: 'uint256', name: 'amount', type: 'uint256' },
            ],
            internalType: 'struct RegistryAdapterIronBank.Allowance[]',
            name: 'assetAllowances',
            type: 'tuple[]',
          },
        ],
        internalType: 'struct RegistryAdapterIronBank.Position[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetsStatic',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'id', type: 'address' },
          { internalType: 'string', name: 'typeId', type: 'string' },
          { internalType: 'address', name: 'tokenId', type: 'address' },
          { internalType: 'string', name: 'name', type: 'string' },
          { internalType: 'string', name: 'version', type: 'string' },
          { internalType: 'string', name: 'symbol', type: 'string' },
          { internalType: 'uint8', name: 'decimals', type: 'uint8' },
        ],
        internalType: 'struct RegistryAdapterIronBank.AssetStatic[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address[]', name: '_assetsAddresses', type: 'address[]' }],
    name: 'assetsStatic',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'id', type: 'address' },
          { internalType: 'string', name: 'typeId', type: 'string' },
          { internalType: 'address', name: 'tokenId', type: 'address' },
          { internalType: 'string', name: 'name', type: 'string' },
          { internalType: 'string', name: 'version', type: 'string' },
          { internalType: 'string', name: 'symbol', type: 'string' },
          { internalType: 'uint8', name: 'decimals', type: 'uint8' },
        ],
        internalType: 'struct RegistryAdapterIronBank.AssetStatic[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'assetsTokensAddresses',
    outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: 'accountAddress', type: 'address' }],
    name: 'assetsUserMetadata',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'assetId', type: 'address' },
          { internalType: 'bool', name: 'enteredMarket', type: 'bool' },
          { internalType: 'uint256', name: 'supplyBalanceUsdc', type: 'uint256' },
          { internalType: 'uint256', name: 'borrowBalanceUsdc', type: 'uint256' },
          { internalType: 'uint256', name: 'borrowLimitUsdc', type: 'uint256' },
        ],
        internalType: 'struct RegistryAdapterIronBank.AssetUserMetadata[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  { inputs: [], name: 'blocksPerYear', outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }], stateMutability: 'view', type: 'function' },
  { inputs: [], name: 'comptrollerAddress', outputs: [{ internalType: 'address', name: '', type: 'address' }], stateMutability: 'view', type: 'function' },
  { inputs: [], name: 'extensionsAddresses', outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }], stateMutability: 'view', type: 'function' },
  { inputs: [], name: 'helperAddress', outputs: [{ internalType: 'address', name: '', type: 'address' }], stateMutability: 'view', type: 'function' },
  { inputs: [], name: 'oracleAddress', outputs: [{ internalType: 'address', name: '', type: 'address' }], stateMutability: 'view', type: 'function' },
  { inputs: [], name: 'owner', outputs: [{ internalType: 'address', name: '', type: 'address' }], stateMutability: 'view', type: 'function' },
  { inputs: [], name: 'registryAddress', outputs: [{ internalType: 'address', name: '', type: 'address' }], stateMutability: 'view', type: 'function' },
  {
    inputs: [{ internalType: 'address[]', name: '_newExtensionsAddresses', type: 'address[]' }],
    name: 'setExtensionsAddresses',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'supportedPositions',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: 'accountAddress', type: 'address' },
      { internalType: 'address', name: 'assetAddress', type: 'address' },
    ],
    name: 'tokenAllowances',
    outputs: [
      {
        components: [
          { internalType: 'address', name: 'owner', type: 'address' },
          { internalType: 'address', name: 'spender', type: 'address' },
          { internalType: 'uint256', name: 'amount', type: 'uint256' },
        ],
        internalType: 'struct RegistryAdapterIronBank.Allowance[]',
        name: '',
        type: 'tuple[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'slot', type: 'bytes32' },
      { internalType: 'bytes32', name: 'value', type: 'bytes32' },
    ],
    name: 'updateSlot',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];
